type Chat {
  id: Int!
  message: String!
  chatRoom: ChatRoom!
  sender: User!
  listeners: [User]
  createdAt: String!
}

type ChatRoom {
  id: Int
  participant: [User]!
  chat: [Chat]
  createdAt: String!
}

type CompleteEmailVerificationResponse {
  ok: Boolean!
  error: String
}

type Mutation {
  CompleteEmailVerification(userId: Int!, verifiedCode: String!): CompleteEmailVerificationResponse!
  RequestEmailVerification(email: String!, password: String!): RequestEmailVerificationResponse!
}

type RequestEmailVerificationResponse {
  ok: Boolean!
  error: String
}

type User {
  id: Int!
  email: String!
  password: String!
  username: String
  profilePhoto: String
  backgroundPhoto: String
  statusMsg: String
  verifiedEmail: Boolean!
  friends: [User]
  myMessage: [Chat]
  otherMessage: Chat
  createdAt: String!
  updatedAt: String
  lastLoginAt: String
}

type Query {
  user: User
}

type Verification {
  id: Int!
  email: String!
  verifiedCode: String!
  isVerified: Boolean!
  createdAt: String!
  updatedAt: String
}
